#!/usr/bin/env python

import os
from argparse import ArgumentParser

import lightkurve as lk

def corrector_func(lc):
    corrected_lc = lc.remove_nans().normalize().flatten(window_length=401)
    return corrected_lc

if __name__ == "__main__":
    ap = ArgumentParser()
    ap.add_argument('kicid', help='KIC ID')
    ap.add_argument("-o", "--outdir", help="output directory", default='./data')
    ap.add_argument("-v", "--verbose", action="store_true", default=False)
    ap.add_argument("-c", "--clobber", action="store_true", default=False)
    args = ap.parse_args()

    kicid = args.kicid
    if args.verbose:
        print(f'Downloading KIC {kicid}...')
    lcfs = lk.search_lightcurvefile(f'KIC {kicid}', mission='Kepler').download_all()
    if lcfs is not None:
        stitched_lc = lcfs.PDCSAP_FLUX.stitch(corrector_func=corrector_func)

        if not os.path.exists(args.outdir):
            os.makedirs(args.outdir)

        filename = f'kic{kicid}.csv'
        outpath = os.path.join(args.outdir, filename)

        if not os.path.exists(outpath) or args.clobber:
            stitched_lc.to_csv(outpath, columns=['time', 'flux', 'flux_err'], index=False)
            if args.verbose:
                print(f'Saved: {outpath}')
        else:
            print(f'File exists: {outpath}. Use --clobber to overwrite.')
    else:
        print(f'Error: No data for KIC {kicid}!\n\n')
